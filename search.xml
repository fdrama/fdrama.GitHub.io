<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>计算机中的二进制</title>
    <url>/2022/08/05/binary/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="什么是二进制">什么是二进制</h2>
<p>所谓的 二进制，就是一种仅用 $1$ 和 $0$ 的排列组合来表示具体数值的，一种记数方法。</p>
<p>例如下面这个数是一个<strong>八位无符号二进制数</strong>，它的每位都是非$1$即$0$的，不会出现$2$或者$3$这样的其它数字。但是仅通过$1$和$0$的组合是如何表示某个具体数值的？</p>
<table>
    <tr>
        <td>1</td>
        <td>0</td>
        <td>1</td>
        <td>0</td>
        <td>1</td>
        <td>0</td>
        <td>0</td>
        <td>0</td>
    </tr>
</table>
<p>我们先来回忆一下小学数学里的 $0,1,2,3,4,5,6,7,8,9$，比如 $456$ 这个数字，我们读作 <em>四百五十六</em>，那么 <em>四百五十六</em> 其实也是经过求值算出来的，具体如下：</p>
<p>$<br>
\begin{aligned}<br>
456&amp;=400+50+6\\<br>
&amp;=4\times10^2+5\times10^1+6\times10^0<br>
\end{aligned}<br>
$</p>
<p>一般地，任意一个十进制数</p>
<p>$D=d_nd_{n-1}…d_1d_0. d_{-1}d_{-2}…d_{-m}$ (m, n为正整数)</p>
<p>其值为<br>
$<br>
\begin{aligned}<br>
V(D)&amp;=d_n\times10^n+d_{n-1}\times10^{n-1}+…+d_1\times10^1+d_0\times10^0+d_{-1}\times10^{-1}+d_{-2}\times10^{-2}+…+d_{-m}\times10^{-m}<br>
\end{aligned}<br>
$</p>
<p>其中，$d_i$可以是$0,1,2,3,4,5,6,7,8,9$里十个数字符号的任何一个，其中$10$称为基数，这个每位分别乘上的固定数值，就是所谓的 <strong>位权（weight）</strong>，即 <strong>每位的权重</strong>。 具体地，从第0位开始，它的每位位权分别是$1, 10, 100, 1000…$，或者说是$10^0, 10^1, 10^2, 10^3…$。在十进制数进行运算时，它每位满十就需要向高位进一，即 <strong>逢十进一</strong></p>
<p>对于二进制来说其实他们的记数方法是一致的，我们看最开始的例子 $10101000_{2}$：</p>
<p>$<br>
\begin{aligned}<br>
10101000_{2}&amp;=0\times2^0+0\times2^1+0\times2^2+1\times2^3+0\times2^4+1\times2^5+0\times2^6+1\times2^7 \\<br>
&amp;=0+0+0+8+0+32+0+128 \\<br>
&amp;=168<br>
\end{aligned}<br>
$</p>
<p>也就是说二进制<strong>10101000</strong> 对应的十进制是 $168$</p>
<p>一般地，任意一个二进制数</p>
<p>$B=b_nb_{n-1}…b_1b_0. b_{-1}b_{-2}…b_{-m}$ (m, n为正整数)</p>
<p>其值为<br>
$<br>
\begin{aligned}<br>
V(B)&amp;=b_n\times2^n+b_{n-1}\times2^{n-1}+…+b_1\times2^1+b_0\times2^0+b_{-1}\times2^{-1}+b_{-2}\times2^{-2}+…+b_{-m}\times2^{-m}<br>
\end{aligned}<br>
$</p>
<p>其中，$b_i$只可以是$0$和$1$两种数字，其中$2$是基数，从第0位开始，二进制每位位权分别是$1, 2, 4, 8$，或者说 $2^0, 2^1,2^2,2^3…$ , 所以，二进制是 <strong>逢二进一</strong>。</p>
<h3 id="进制">进制</h3>
<p>一般地，在某个数字系统中，若采用$R$个基本符号(0, 1, 2,…,R-1)表示各位上的数字，则称其位 <strong>R进制</strong>，$R$被称为数字系统的基，它采用 <strong>逢R进一</strong>的运算规则，对于每一个数位$i$， 第 $i$ 位的位权就是 $R^i$。</p>
<p>计算机系统中，常用的进制有下列4种：</p>
<table>
<thead>
<tr>
<th style="text-align:center"><strong>进制</strong></th>
<th style="text-align:center"><strong>R</strong></th>
<th style="text-align:center"><strong>基本符号</strong></th>
<th style="text-align:center"><strong>后缀标识</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">二进制</td>
<td style="text-align:center">2</td>
<td style="text-align:center">$0,1$</td>
<td style="text-align:center">B(Binary)</td>
</tr>
<tr>
<td style="text-align:center">八进制</td>
<td style="text-align:center">8</td>
<td style="text-align:center">$0,1,2,3,4,5,6,7$</td>
<td style="text-align:center">O(Octal)</td>
</tr>
<tr>
<td style="text-align:center">十进制</td>
<td style="text-align:center">10</td>
<td style="text-align:center">$0,1,2,3,4,5,6,7,8,9$</td>
<td style="text-align:center">D(Decimal)</td>
</tr>
<tr>
<td style="text-align:center">十六进制</td>
<td style="text-align:center">16</td>
<td style="text-align:center">$0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F$</td>
<td style="text-align:center">H(Hexadecimal)</td>
</tr>
</tbody>
</table>
<p>查看下表<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>
<h4 id="常用进制之间的转换">常用进制之间的转换</h4>
<p>计算机内部所有信息采用二进制编码表示，但在计算机外部世界，为了书写和阅读的方便，大都采用八、十或十六进制数表示形式。因此，必须实现进制之间的转换。</p>
<ol>
<li>
<p><strong>R进制数转换为十进制数</strong></p>
<p>任何一个R进制数转换为十进制数时，只需要 <strong>按位展开</strong> 即可。</p>
<ul>
<li><em>二进制转换十进制</em><br>
$<br>
\begin{aligned}<br>
10101.01_{2}&amp;=1\times2^4+0\times2^3+1\times2^2+0\times2^1+1\times2^0+0\times2^{-1}+1\times2^{-2}\\<br>
&amp;=16+0+4+0+1+0+0.25 \\<br>
&amp;=21.25_{10}<br>
\end{aligned}<br>
$</li>
<li><em>八进制转换十进制</em><br>
$<br>
\begin{aligned}<br>
307.6_{8}&amp;=3\times8^2+0\times8^1+7\times8^0+8\times8^{-1}\\<br>
&amp;=192+0+7+0.75\\<br>
&amp;=199.75_{10}<br>
\end{aligned}<br>
$</li>
<li><em>十六进制转换十进制</em><br>
$<br>
\begin{aligned}<br>
3A.C_{16}&amp;=3\times16^1+10\times16^0+12\times16^{-1}\\<br>
&amp;=48+10+0.75\\<br>
&amp;=58.75_{10}<br>
\end{aligned}<br>
$</li>
</ul>
</li>
<li>
<p><strong>R进制数转换为十进制数</strong></p>
<p>任何一个十进制数转换为R进制数时，要将整数和小数部分分别进行转换。</p>
<ul>
<li>2.1 <em>整数部分的转换</em></li>
</ul>
<p>整数部分的转换方法就是 <strong>除基取余，上右下左</strong>。也就是说，用要转换的十进制整数除以基数R，将得到的余数作为结果数据中各位的数字，直到余数位0为止。上面的余数（即先得到的余数）作为右边的低位数位，下面的余数作为左边的高位数位。</p>
<ul>
<li>2.2 <em>小数部分的转换</em></li>
</ul>
<p>小数部分的转换方法就是 <strong>乘基取整，上左下右</strong>。也就是说，用要转换的十进制小数乘以基数R，将得到的乘积整数部分作为结果数据中各位的数字，小数部分继续与基数R相乘，依此类推，直到某一步乘积的小数部分为0或已得到希望的位数为止。最后，将上面的整数部分作为左边的高位数位，下面的整数部分作为右边的低位数位。在转换过程中，可能乘积的小数部分总得不到0，即转换得到希望的位数后还有余数，这是得到的结果就是近似值。</p>
</li>
<li>
<p><strong>二、八、十六进制的相互转换</strong></p>
<ul>
<li>
<ol>
<li>
<p>八进制转换为二进制数</p>
<p>只要把八进制数的每一位改写为对应的3位二进制数即可，保持高低位次序不变。对应关系如下：</p>
<table>
    <tr>
        <td>八进制</td>
        <td>0</td>
        <td>1</td>
        <td>2</td>
        <td>3</td>
        <td>4</td>
        <td>5</td>
        <td>6</td>
        <td>7</td>
    </tr>
    <tr>
        <td>二进制</td>
        <td>000</td>
        <td>001</td>
        <td>010</td>
        <td>011</td>
        <td>100</td>
        <td>101</td>
        <td>110</td>
        <td>111</td>
    </tr>
</table>
<p>例：$13.72_{8}=(001011.111010)_{2}$</p>
</li>
</ol>
</li>
<li>
<ol start="2">
<li>
<p><em>十六进制转换为二进制</em></p>
<p>和八进制转换二进制类型，只要把八进制数的每一位改写为对应的4位二进制数即可，保持高低位次序不变。对应关系如下：</p>
<table>
    <tr>
        <td>十六进制</td>
        <td>0</td>
        <td>1</td>
        <td>2</td>
        <td>3</td>
        <td>4</td>
        <td>5</td>
        <td>6</td>
        <td>7</td>
        <td>8</td>
        <td>9</td>
        <td>A</td>
        <td>B</td>
        <td>C</td>
        <td>D</td>
        <td>E</td>
        <td>F</td>
    </tr>
    <tr>
        <td>二进制</td>
        <td>0000</td>
        <td>0001</td>
        <td>0010</td>
        <td>0011</td>
        <td>0100</td>
        <td>0101</td>
        <td>0110</td>
        <td>0111</td>
        <td>1000</td>
        <td>1001</td>
        <td>1010</td>
        <td>1011</td>
        <td>1100</td>
        <td>1101</td>
        <td>1110</td>
        <td>1111</td>
    </tr>
</table>
<p>例：$2B.C_{16}=(00101011.1100)_{2}$</p>
</li>
</ol>
</li>
<li>
<ol start="3">
<li>
<p><em>二进制数转换为八进制数</em></p>
<p>二进制转换成八进制时，整数部分由低向高位（从右到左）方向，每三位用一个等值的八位进制数进行替换，最后不足三位在高位补0凑满三位；小数部分从高位向低位（从左到右）方向，每三位用一个等值的八位进制数替换，最后不足三位时，在低位补0凑满三位。</p>
<p>例：$10011.01_{2}=010011.010_{2}=(23.2)_{8}$</p>
</li>
</ol>
</li>
<li>
<ol start="4">
<li>
<p><em>二进制数转换为十六进制数</em></p>
<p>同八进制相似，二进制转换成十六进制时，整数部分由低向高位（从右到左）方向，每四位用一个等值的十六位进制数进行替换，最后不足四位在高位补0凑满四位；小数部分从高位向低位（从左到右）方向，每四位用一个等值的十六进制数替换，最后不足四位时，在低位补0凑满四位。</p>
<p>例：$11001.11_{2}=00011001.1100_{2}=(19.C)_{16}$</p>
</li>
</ol>
</li>
</ul>
</li>
</ol>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;"><table><tr><td><strong>二进制</strong></td><td><strong>八进制</strong></td><td><strong>十进制</strong></td><td><strong>十六进制</strong></td></tr><tr><td>0000</td><td>0</td><td>0</td><td>0</td></tr><tr><td>0001</td><td>1</td><td>1</td><td>1</td></tr><tr><td>0010</td><td>2</td><td>2</td><td>2</td></tr><tr><td>0011</td><td>3</td><td>3</td><td>3</td></tr><tr><td>0100</td><td>4</td><td>4</td><td>4</td></tr><tr><td>0101</td><td>5</td><td>5</td><td>5</td></tr><tr><td>0110</td><td>6</td><td>6</td><td>6</td></tr><tr><td>0111</td><td>7</td><td>7</td><td>7</td></tr><tr><td>1000</td><td>10</td><td>8</td><td>8</td></tr><tr><td>1001</td><td>11</td><td>9</td><td>9</td></tr><tr><td>1010</td><td>12</td><td>10</td><td>A</td></tr><tr><td>1011</td><td>13</td><td>11</td><td>B</td></tr><tr><td>1100</td><td>14</td><td>12</td><td>C</td></tr><tr><td>1101</td><td>15</td><td>13</td><td>D</td></tr><tr><td>1110</td><td>16</td><td>14</td><td>E</td></tr><tr><td>1111</td><td>17</td><td>15</td><td>F</td></tr></table></span><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
      <categories>
        <category>计算机原理</category>
      </categories>
      <tags>
        <tag>binary</tag>
      </tags>
  </entry>
  <entry>
    <title>博客指南</title>
    <url>/2022/07/11/hexo-guide/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>欢迎来到我的博客!</p>
<p>感谢 <a href="https://pages.github.com/">GithubPage</a> + <a href="https://hexo.io/zh-cn/">Hexo</a> + <a href="https://theme-next.js.org/">next</a>。<br>
感谢开源世界，让搭建一个属于自己的博客变的十分便捷。我以后也会在这里分享关于编程和生活的一些东西。</p>
<p>以下是我个人搭建博客的步骤:</p>
<h2 id="Hexo">Hexo</h2>
<p><a href="https://hexo.io/zh-cn/docs/">Hexo</a> 是一个快速、简洁且高效的博客框架</p>
<h3 id="安装">安装</h3>
<h4 id="前置准备">前置准备</h4>
<ul>
<li>
<p>安装nodeJs并配置 (<a href="http://nodejs.cn/learn/introduction-to-nodejs">http://nodejs.cn/learn/introduction-to-nodejs</a>)</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看是否安装成功</span></span><br><span class="line">$ node -v </span><br></pre></td></tr></table></figure>
</li>
<li>
<p>安装Git并配置 <code>https://git-scm.com/</code></p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看是否安装成功</span></span><br><span class="line">$ git --version</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>安装Hexo</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 全局安装</span></span><br><span class="line">$ npm install -g hexo-cli</span><br><span class="line"></span><br><span class="line"><span class="comment"># 局部安装</span></span><br><span class="line">$ npm install hexo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 命令执行 两种方式</span></span><br><span class="line">1. $ npx hexo &lt;<span class="built_in">command</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Hexo 所在的目录下的 node_modules 添加到环境变量 直接使用 hexo &lt;command&gt; linux为例</span></span><br><span class="line">2. <span class="built_in">echo</span> <span class="string">&#x27;PATH=&quot;$PATH:./node_modules/.bin&quot;&#x27;</span> &gt;&gt; ~/.profile</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="启动">启动</h4>
<ol>
<li>
<p>安装完hexo执行以下命令</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 初始化 此folder 就是下面文档里的 $&#123;hexo-site&#125;</span></span><br><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>执行完成后目标文件夹的目录结构</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>运行<em>hexo server</em>访问 (<a href="http://localhost:4000/">http://localhost:4000/</a>)</p>
</li>
</ol>
<h3 id="配置">配置</h3>
<h4 id="主题">主题</h4>
<p>hexo 有很多主题 这里已Next为例 Next(<a href="https://theme-next.js.org/">https://theme-next.js.org/</a>)</p>
<ol>
<li>
<p>安装</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 移动到hexo 安装目录</span></span><br><span class="line">$ <span class="built_in">cd</span> hexo-site</span><br><span class="line">$ <span class="built_in">ls</span></span><br><span class="line">_config.yml  node_modules  package-lock.json  package.json  scaffolds  <span class="built_in">source</span>  themes</span><br></pre></td></tr></table></figure>
<ul>
<li>npm安装</li>
</ul>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-theme-next</span><br></pre></td></tr></table></figure>
<ul>
<li>git安装</li>
</ul>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>配置</p>
<p>现在有两个配置文件 <em>_config.yml</em>， 一个是hexo的配置文件，一个是next主题的配置文件，不同的安装方式，所在的目录不同<br>
(e.g. thems/next/_config.yml or node_modules/hexo-theme-next/_config.yml.</p>
<p>不推荐直接修改主题里面的文件, 因为npm升级或者git更新会覆盖文件，hexo建议将主题文件复制到根目录并且修改名称为 <em><strong>_config.[theme].yml</strong></em></p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Installed through npm</span></span><br><span class="line">$ <span class="built_in">cp</span> node_modules/hexo-theme-next/_config.yml _config.next.yml</span><br><span class="line"><span class="comment"># Installed through Git</span></span><br><span class="line">$ <span class="built_in">cp</span> themes/next/_config.yml _config.next.yml</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>修改配置文件 _config.yml</p>
 <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">Hexo</span> <span class="string">config</span> <span class="string">file</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>启动 <em>hexo s</em> 查看页面样式已经发生变化</p>
</li>
</ol>
<h4 id="页面">页面</h4>
<h5 id="标签页">标签页</h5>
<ol>
<li>
<p>生成标签页</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> hexo-site</span><br><span class="line">$ hexo new page tags</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>配置标签页</p>
<p>修改生成的source/tags/index.md 指定type</p>
 <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">Tags</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2014-12-22 12:39:04</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">tags</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>编辑菜单 <em>_config.next.yml</em></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">   <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">   <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">   <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">tagcloud:</span></span><br><span class="line">   <span class="comment"># 标签的样式</span></span><br><span class="line">   <span class="attr">min:</span> <span class="number">12</span> <span class="comment"># Minimum font size in px</span></span><br><span class="line">   <span class="attr">max:</span> <span class="number">30</span> <span class="comment"># Maximum font size in px</span></span><br><span class="line">   <span class="attr">amount:</span> <span class="number">200</span> <span class="comment"># Total amount of tags</span></span><br><span class="line">   <span class="attr">orderby:</span> <span class="string">name</span> <span class="comment"># Order of tags</span></span><br><span class="line">   <span class="attr">order:</span> <span class="number">1</span> <span class="comment"># Sort order</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>在文章里使用标签</p>
 <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hexo</span> <span class="string">Guide</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2022-07-11 17:33:53</span></span><br><span class="line"><span class="attr">tags:</span> [<span class="string">hexo</span>, <span class="string">next</span>]</span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h5 id="分类页">分类页</h5>
<p>操作和上面的标签页一样, 只是把 <em><strong>tags</strong></em> 修改为 <em><strong>categories</strong></em> ,分类每个文章只支持一个</p>
<h3 id="插件">插件</h3>
<h4 id="搜索">搜索</h4>
<p><a href="https://github.com/theme-next/hexo-generator-searchdb">hexo-generator-searchdb</a> 用于生成搜索索引文件，其中包含您的文章的所有必要数据。</p>
<ol>
<li>
<p>安装</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>编辑 <em><strong>_config.yml</strong></em> 新增配置</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>编辑 <em><strong>_config_next.yml</strong></em> 文件</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="评论">评论</h4>
<p>hexo-next-utteranc (<a href="https://github.com/theme-next/hexo-next-utteranc">https://github.com/theme-next/hexo-next-utteranc</a>)</p>
<p>next 支持很多评论系统 disqus | disqusjs | changyan | livere | gitalk | utterances  这里以utterances为例</p>
<p>utterance(<a href="https://utteranc.es/">https://utteranc.es/</a>) 原理: 在博客页面上输入评论，utterance拿到这个评论后，自动的提交到上面刚创建仓库的Issues里。</p>
<ol>
<li>
<p>授权</p>
<p>点击(<a href="https://github.com/apps/utterances">https://github.com/apps/utterances</a>) 安装githubApp 并授权指定仓库</p>
</li>
<li>
<p>配置 <em>_config.next.yml</em></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">comments:</span></span><br><span class="line">  <span class="comment"># Available values: tabs | buttons</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">tabs</span></span><br><span class="line">  <span class="comment"># 指定评论系统</span></span><br><span class="line">  <span class="attr">active:</span> <span class="string">utterances</span></span><br><span class="line"></span><br><span class="line"> <span class="attr">utterance:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment">#仓库名字，格式：用户ID/仓库名称</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">Molers/BlogComment</span></span><br><span class="line">    <span class="comment">#主题</span></span><br><span class="line">    <span class="attr">theme:</span> <span class="string">github-light</span></span><br><span class="line">    <span class="comment">#映射配置 这里是跳转github后重定向的地址 取的是 url + 当前path名称，所以需要在_config.yml里配置 url为你网站的域名，才能正常跳转</span></span><br><span class="line">    <span class="attr">issue_term:</span> <span class="string">pathname</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>让某些页面不支持comments 页头设置false就行</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="number">404</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2022-07-11 17:38:27</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="Rss">Rss</h4>
<p>hexo-generator-feed (<a href="https://github.com/hexojs/hexo-generator-feed">https://github.com/hexojs/hexo-generator-feed</a>)</p>
<ol>
<li>
<p>安装</p>
 <figure class="highlight bash"><figcaption><span>下载</span></figcaption><table><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>配置</p>
<figure class="highlight yml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">feed:</span></span><br><span class="line">   <span class="attr">enable:</span> <span class="literal">true</span> </span><br><span class="line">   <span class="attr">type:</span> <span class="string">atom</span> <span class="comment">#制定类型</span></span><br><span class="line">   <span class="attr">path:</span> <span class="string">atom.xml</span>  <span class="comment">#生成路径</span></span><br><span class="line">   <span class="attr">limit:</span> <span class="number">20</span> <span class="comment"># 文章数量限制 0/false 表示所有文章</span></span><br><span class="line">   <span class="attr">hub:</span></span><br><span class="line">   <span class="attr">content:</span></span><br><span class="line">   <span class="attr">content_limit:</span> <span class="number">140</span> <span class="comment">#文章内容限制</span></span><br><span class="line">   <span class="attr">content_limit_delim:</span> <span class="string">&#x27; &#x27;</span></span><br><span class="line">   <span class="attr">order_by:</span> <span class="string">-date</span> <span class="comment">#排序</span></span><br><span class="line">   <span class="attr">icon:</span> <span class="string">icon.png</span></span><br><span class="line">   <span class="attr">autodiscovery:</span> <span class="literal">true</span></span><br><span class="line">   <span class="attr">template:</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>展示</p>
<p>两种展示位置, 一个在文章底部, 一个在菜单栏</p>
 <figure class="highlight yml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">follow_me:</span></span><br><span class="line">    <span class="comment"># 文章底部</span></span><br><span class="line">   <span class="attr">RSS:</span> <span class="string">/atom.xml</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-rss</span></span><br><span class="line"></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">    <span class="comment"># 菜单栏</span></span><br><span class="line">   <span class="attr">RSS:</span> <span class="string">/atom.xml</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-rs</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="字体统计">字体统计</h4>
<p>hexo-word-counter (<a href="https://github.com/next-theme/hexo-word-counter">https://github.com/next-theme/hexo-word-counter</a>)</p>
<ol>
<li>
<p>安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-word-counter</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>配置 <em>_config.yml</em></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">   <span class="attr">symbols:</span> <span class="literal">true</span></span><br><span class="line">   <span class="attr">time:</span> <span class="literal">true</span></span><br><span class="line">   <span class="attr">total_symbols:</span> <span class="literal">true</span></span><br><span class="line">   <span class="attr">total_time:</span> <span class="literal">true</span></span><br><span class="line">   <span class="attr">exclude_codeblock:</span> <span class="literal">false</span></span><br><span class="line">   <span class="attr">awl:</span> <span class="number">4</span></span><br><span class="line">   <span class="attr">wpm:</span> <span class="number">275</span></span><br><span class="line">   <span class="attr">suffix:</span> <span class="string">&quot;mins.&quot;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>配置 *_config.next.yml</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">   <span class="attr">separated_meta:</span> <span class="literal">true</span></span><br><span class="line">   <span class="attr">item_text_total:</span> <span class="literal">false</span></span><br><span class="line">   <span class="attr">symbols:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="脚注">脚注</h4>
<p>hexo-footnotes (<a href="https://github.com/LouisBarranqueiro/hexo-footnotes">https://github.com/LouisBarranqueiro/hexo-footnotes</a>)</p>
<ol>
<li>
<p>安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-footnotes --save</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="支持Latex公式">支持Latex公式</h4>
<p>hexo-footnotes (<a href="https://github.com/LouisBarranqueiro/hexo-footnotes">https://github.com/LouisBarranqueiro/hexo-footnotes</a>)</p>
<ol>
<li>
<p>配置 *_config.next.yml</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">math:</span></span><br><span class="line">  <span class="attr">every_page:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">mathjax:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">        <span class="comment"># Available values: none | ams | all</span></span><br><span class="line">    <span class="attr">tags:</span> <span class="string">none</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>配置文档</p>
 <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">true</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>处理步骤</p>
<p>Hexo 中的 Markdown 引擎把 Markdown 变为 html 文件<br>
MathJax 负责解释 html 的数学公式</p>
<p>第一步中，由于 backslash 在 Markdown 属于特殊字符，用于字符转义，所以两个 backslash 经过 Markdown 引擎处理，只剩下一个，等到 MathJax 引擎处理时，实际上 MathJax 只看到一个 backslash，MathJax 把它当作 LaTeX 中的空格，因此我们见到了上图所示的渲染结果。</p>
<p>知道了渲染错误的原因，解决办法也很简单，就是用四个 backslash 代替两个 backslash，确保 MathJax 的引擎看到的是两个 backslash，对于公式换行，把公式里的2个{\} 变成4个{\}</p>
</li>
</ol>
<h3 id="部署">部署</h3>
<h4 id="Git">Git</h4>
<h5 id="git管理源码">git管理源码</h5>
<p>推荐使用 <em><strong>${username}.github.io</strong></em> 仓库管理源代码，两个分支 一个hexo保存源码信息， 一个main保存生成的静态文件用于部署。</p>
<ol>
<li>在你的hexo 目录下执行 <em>git init</em></li>
<li>git checout ${branchname}</li>
<li>git remote add ${name} <code>https://github.com/username/username.github.io</code></li>
<li>git add .</li>
<li>git commit -m “init hexo”;</li>
<li>git push</li>
</ol>
<h5 id="部署静态文件">部署静态文件</h5>
<p>Hexo 提供了快速方便的一键部署功能，让您只需一条命令就能将网站部署到服务器上。 这里推荐git部署</p>
<ol>
<li>
<p>安装 hexo-deployer-git</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">$ npm install hexo-deployer-git</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>修改**_config.yml**文件里的deploy值</p>
 <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">   <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">   <span class="attr">repo:</span> <span class="string">git@github.com:&#123;$username&#125;/&#123;$username&#125;.github.io.git</span> <span class="comment"># Repository</span></span><br><span class="line">   <span class="attr">branch:</span> <span class="string">main</span> <span class="comment">#[branch]</span></span><br><span class="line">   <span class="attr">message:</span> <span class="string">update</span> <span class="string">Hexo</span> <span class="string">Static</span> <span class="string">Content</span> <span class="comment">#commit message</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>生成站点文件并推送至远程库执行</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 清理并发布</span></span><br><span class="line">$ hexo clean &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>登入Github，请在库设置（Repository Settings）中将默认分支设置为<em>步骤2</em> _config.yml配置中的分支名称。</p>
</li>
<li>
<p>稍等片刻，您的站点就会显示在您的Github Pages中 <code>https://$&#123;username&#125;.github.io</code></p>
</li>
</ol>
<h5 id="这一切是如何发生的">这一切是如何发生的</h5>
<p>当执行 hexo deploy 时，Hexo 会将 public 目录中的文件和目录推送至 _config.yml 中指定的远端仓库和分支中，并且完全覆盖该分支下的已有内容。</p>
<h4 id="疑难解答">疑难解答</h4>
<ol>
<li>
<p>Spawn failed</p>
 <figure class="highlight plaintext"><figcaption><span>问题</span></figcaption><table><tr><td class="code"><pre><span class="line">fatal: unable to access &#x27;https://github.com/$&#123;username&#125;/$&#123;username&#125;.github.io/&#x27;: OpenSSL SSL_read: Connection was reset, errno 10054</span><br><span class="line">FATAL &#123;</span><br><span class="line">err: Error: Spawn failed</span><br><span class="line">    at ChildProcess.&lt;anonymous&gt; (E:\develop\hello\node_modules\hexo-util\lib\spawn.js:51:21)</span><br><span class="line">    at ChildProcess.emit (node:events:527:28)</span><br><span class="line">    at ChildProcess.cp.emit (E:\develop\hello\node_modules\cross-spawn\lib\enoent.js:34:29)</span><br><span class="line">    at Process.ChildProcess._handle.onexit (node:internal/child_process:291:12) &#123;</span><br><span class="line">    code: 128</span><br><span class="line">&#125;</span><br><span class="line">&#125; Something&#x27;s wrong. Maybe you can find the solution here: %s https://hexo.io/docs/troubleshooting.html</span><br><span class="line"></span><br></pre></td></tr></table></figure>
 <figure class="highlight bash"><figcaption><span>解决</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># 切换到博客根目录</span></span><br><span class="line"><span class="built_in">cd</span> hexo-site</span><br><span class="line"><span class="comment"># 删除此文件</span></span><br><span class="line"><span class="built_in">rm</span> -rf .deploy_git/</span><br><span class="line"><span class="comment"># git 配置换行符转换</span></span><br><span class="line">git config --global core.autocrlf <span class="literal">false</span></span><br><span class="line"><span class="comment"># 部署</span></span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line"><span class="comment"># 修改部署的仓库地址http地址为git@github.com开通的地址</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      <categories>
        <category>博客指南</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
        <tag>gitPage</tag>
      </tags>
  </entry>
</search>
